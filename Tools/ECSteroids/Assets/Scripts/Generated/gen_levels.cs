//
// DO NOT MODIFY THIS FILE
//
// This file will eventually be automatically generated by the makeLevels.py script operating on levels.csv
//

using BDG_ECS;
using System.Collections.Generic;
using String = System.String;
using Unity.Collections;
using UnityEngine;
using Vectrosity;

namespace ECSteroids {
    public class LevelFactory {
        public static void MakeLevels(ECSWorld world)
        {
            makeLevelDesc(world, 1, "Wave 1", 3, 0, 0, 0, 0, 0);
            //makeLevelDesc(world, 1, "Wave 1 Test", 1, 0, 0, 0, 0, 0);
            makeLevelDesc(world, 2, "Wave 2", 4, 0, 0, 0, 0, 0);
            makeLevelDesc(world, 3, "Wave 3", 5, 0, 0, 0, 1, 0);
            makeLevelDesc(world, 4, "Wave 4", 6, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 5, "BONUS 1", 0, 8, 180, 0, 0, 0);
            makeLevelDesc(world, 6, "Wave 5", 5, 0, 0, 0, 1, 0);
            makeLevelDesc(world, 7, "Wave 6", 6, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 8, "Wave 7", 7, 0, 0, 0, 8, 1);
            makeLevelDesc(world, 9, "Wave 8", 8, 0, 0, 0, 4, 1);
            makeLevelDesc(world, 10, "Wave 9", 9, 0, 0, 0, 2, 1);
            makeLevelDesc(world, 11, "BONUS 2", 0, 16, 120, 0, 0, 0);
            makeLevelDesc(world, 12, "Wave 10", 8, 0, 0, 0, 1, 1);
            makeLevelDesc(world, 13, "Wave 11", 9, 0, 0, 0, 1, 1);
            makeLevelDesc(world, 14, "Wave 12", 10, 0, 0, 0, 1, 2);
            makeLevelDesc(world, 15, "Wave 13", 11, 0, 0, 0, 1, 3);
            makeLevelDesc(world, 16, "Wave 14", 12, 0, 0, 0, 1, 4);
            makeLevelDesc(world, 17, "Wave 15", 13, 0, 0, 0, 1, 5);
            makeLevelDesc(world, 18, "BONUS 3", 3, 24, 90, 0, 0, 0);
            makeLevelDesc(world, 19, "2 Warps to Neptune", 12, 0, 0, 0, 1, 6);
            makeLevelDesc(world, 20, "1 Warp to Neptune", 14, 0, 0, 0, 1, 7);
            makeLevelDesc(world, 21, "NEPTUNE", 0, 0, 100, 8, 1, 0);
            makeLevelDesc(world, 22, "3 Warps to Uranus", 12, 0, 0, 0, 1, 8);
            makeLevelDesc(world, 23, "2 Warps to Uranus", 13, 0, 0, 0, 1, 9);
            makeLevelDesc(world, 24, "1 Warp to Uranus", 14, 0, 0, 0, 1, 10);
            makeLevelDesc(world, 25, "URANUS", 0, 0, 110, 12, 1, 0);
            makeLevelDesc(world, 26, "3 Warps to Saturn", 13, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 27, "2 Warps to Saturn", 14, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 28, "1 Warp to Saturn", 15, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 29, "SATURN", 0, 0, 120, 16, 0, 0);
            makeLevelDesc(world, 30, "3 Warps to Jupiter", 14, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 31, "2 Warps to Jupiter", 15, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 32, "1 Warp to Jupiter", 16, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 33, "JUPITER", 0, 0, 140, 20, 0, 0);
            makeLevelDesc(world, 34, "3 Warps to Mars", 15, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 35, "2 Warps to Mars", 16, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 36, "1 Warp to Mars", 17, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 37, "MARS", 0, 0, 160, 24, 0, 1);
            makeLevelDesc(world, 38, "3 Warps to Earth", 16, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 39, "2 Warps to Earth", 17, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 40, "1 Warp to Earth", 18, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 41, "EARTH", 0, 16, 180, 32, 0, 1);
            makeLevelDesc(world, 42, "Extended Play", 20, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 43, "Extended Play", 22, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 44, "Extended Play", 24, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 45, "Extended Play", 26, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 46, "Extended Play", 28, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 47, "Extended Play", 30, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 48, "Extended Play", 32, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 49, "Extended Play", 34, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 50, "Extended Play", 36, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 51, "Extended Play", 38, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 52, "Extended Play", 40, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 53, "Extended Play", 42, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 54, "Extended Play", 44, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 55, "Extended Play", 46, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 56, "Extended Play", 48, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 57, "Extended Play", 50, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 58, "Extended Play", 52, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 59, "Extended Play", 54, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 60, "Extended Play", 56, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 61, "Extended Play", 58, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 62, "Extended Play", 60, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 63, "Extended Play", 62, 0, 0, 0, 0, 1);
            makeLevelDesc(world, 64, "Extended Play", 64, 0, 0, 0, 0, 1);
        }

        static long makeLevelDesc(ECSWorld world, int levelIndex, string levelName, int numAsteroids, int numStaticCoins, int timeLimitSeconds, int numDynamicCoins, int numSaucersBig, int numSaucersSmall)
        {
            long eid = world.GetUnusedEntityID();
            LevelDesc ld = new LevelDesc();
            Debug.Log(string.Format("making level desc with eid {0} for wave index {1}", eid, levelIndex));

            ld.EntityID = eid;
            ld.index = levelIndex;
            ld.name = levelName;
            ld.numAsteroids = numAsteroids;
            ld.numStaticCoins = numStaticCoins;
            ld.numSaucersBig = numSaucersBig;
            ld.numSaucersSmall = numSaucersSmall;

            world.cmp_levelDescs[eid] = ld;
            return eid;
        }

        public static long GetLevelDescByWaveIndex(ECSWorld world, int levelIndex)
        {
            Debug.Log("considering level descs:" + world.cmp_levelDescs.Count);
            foreach (LevelDesc ld in world.cmp_levelDescs.Values) {
                Debug.Log("looking at level desc:" + ld.index);
                if (ld.index == levelIndex) {
                    Debug.Log("found eid:" + ld.EntityID);
                    return ld.EntityID;
                }
            }
            return ECSWorld.NO_ENTITY;
        }
    }
}
