//
// DO NOT MODIFY THIS FILE
//
// This file is automatically generated by the genCS.py script operating on components.xml
//

using BDG_ECS;
using System.Collections.Generic;
using String = System.String;
using Unity.Collections;
using UnityEngine;
using Vectrosity;

namespace ECSteroids {
    public class Transform : BaseComponent {
        public Vector3 pos;
        public float angle;

        public void Populate(Vector3 pos, float angle) {
            this.pos = pos;
            this.angle = angle;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class Polygon : BaseComponent {
        public List<Vector3> points;
        public VectorLine vectLine;
        public bool isDirty;
        public Color color;
        public float lineWidth;

        public void Populate(List<Vector3> points, VectorLine vectLine, bool isDirty, Color color, float lineWidth) {
            this.points = points;
            this.vectLine = vectLine;
            this.isDirty = isDirty;
            this.color = color;
            this.lineWidth = lineWidth;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class PlayerScore : BaseComponent {
        public int score;

        public void Populate(int score) {
            this.score = score;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class BulletTag : BaseComponent {

        public void Populate() {
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class ShipTag : BaseComponent {

        public void Populate() {
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class AsteroidTag : BaseComponent {

        public void Populate() {
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class TeamId : BaseComponent {
        public int index;

        public void Populate(int index) {
            this.index = index;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class DrawColor : BaseComponent {
        public Color color;

        public void Populate(Color color) {
            this.color = color;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class AsteroidSize : BaseComponent {
        public float radius;

        public void Populate(float radius) {
            this.radius = radius;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class KeyBindings : BaseComponent {
        public List<KeyBinding> keys;

        public void Populate(List<KeyBinding> keys) {
            this.keys = keys;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class Velocity : BaseComponent {
        public Vector3 vel;

        public void Populate(Vector3 vel) {
            this.vel = vel;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class InputBuffer : BaseComponent {
        public List<KeyState> keys;
        public float steer;
        public float throttle;
        public bool isShooting;
        public float shootCooldown;
        public float maxCooldown;

        public void Populate(List<KeyState> keys, float steer, float throttle, bool isShooting, float shootCooldown, float maxCooldown) {
            this.keys = keys;
            this.steer = steer;
            this.throttle = throttle;
            this.isShooting = isShooting;
            this.shootCooldown = shootCooldown;
            this.maxCooldown = maxCooldown;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class ScreenLimits : BaseComponent {
        public float width;

        public void Populate(float width) {
            this.width = width;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class PointTag : BaseComponent {

        public void Populate() {
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class InputDrivesThisEntityTempTag : BaseComponent {

        public void Populate() {
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class CollisionDisk : BaseComponent {
        public float radius;

        public void Populate(float radius) {
            this.radius = radius;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class EntityLifetime : BaseComponent {
        public float secondsRemaining;

        public void Populate(float secondsRemaining) {
            this.secondsRemaining = secondsRemaining;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class PlayerData : BaseComponent {
        public int score;
        public int lives;
        public int waveIndex;

        public void Populate(int score, int lives, int waveIndex) {
            this.score = score;
            this.lives = lives;
            this.waveIndex = waveIndex;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class GameState : BaseComponent {
        public ECSWorld.ECSteroidsGameState currentState;

        public void Populate(ECSWorld.ECSteroidsGameState currentState) {
            this.currentState = currentState;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class PendingGameState : BaseComponent {
        public ECSWorld.ECSteroidsGameState nextState;
        public float secondsRemaining;

        public void Populate(ECSWorld.ECSteroidsGameState nextState, float secondsRemaining) {
            this.nextState = nextState;
            this.secondsRemaining = secondsRemaining;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class TextMessage : BaseComponent {
        public string text;
        public Vector3 pos;
        public float scale;
        public Color color;
        public float width;
        public VectorLine vectLine;

        public void Populate(string text, Vector3 pos, float scale, Color color, float width, VectorLine vectLine) {
            this.text = text;
            this.pos = pos;
            this.scale = scale;
            this.color = color;
            this.width = width;
            this.vectLine = vectLine;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class BootStateTag : BaseComponent {

        public void Populate() {
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class TitleStateTag : BaseComponent {

        public void Populate() {
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class GameplayStateTag : BaseComponent {

        public void Populate() {
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class TemporaryInvulnerability : BaseComponent {
        public float secondsRemaining;

        public void Populate(float secondsRemaining) {
            this.secondsRemaining = secondsRemaining;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

    public class LevelDesc : BaseComponent {
        public int index;
        public string name;
        public int numAsteroids;
        public int numStaticCoins;
        public int timeLimitSeconds;
        public int numDynamicCoins;
        public int numSaucersBig;
        public int numSaucersSmall;

        public void Populate(int index, string name, int numAsteroids, int numStaticCoins, int timeLimitSeconds, int numDynamicCoins, int numSaucersBig, int numSaucersSmall) {
            this.index = index;
            this.name = name;
            this.numAsteroids = numAsteroids;
            this.numStaticCoins = numStaticCoins;
            this.timeLimitSeconds = timeLimitSeconds;
            this.numDynamicCoins = numDynamicCoins;
            this.numSaucersBig = numSaucersBig;
            this.numSaucersSmall = numSaucersSmall;
        }

        public override String Serialize() {
            return "";
        }

        public override bool Deserialize(String s) {
            return false;
        }

        public override void Reset() {
        }

    }

}

